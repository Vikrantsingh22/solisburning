const express = require("express");
// const { scrapeLogic } = require("./scrapeLogic");
const puppeteer = require("puppeteer");
require("dotenv").config();
const cors = require("cors");
const { scrapeLogic } = require("./scrapeLogic");
const app = express();
app.use(cors());
const cheerio = require("cheerio");
const PORT = process.env.PORT || 4000;

const userAgents = [
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36",
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:124.0) Gecko/20100101 Firefox/124.0",
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 Edg/123.0.2420.81",
  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 OPR/109.0.0.0",
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36",
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 14.4; rv:124.0) Gecko/20100101 Firefox/124.0",
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 14_4_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.4.1 Safari/605.1.15",
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 14_4_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36 OPR/109.0.0.0",
  "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36",
  "Mozilla/5.0 (X11; Linux i686; rv:124.0) Gecko/20100101 Firefox/124.0",
];
function getRandomUserAgent() {
  return userAgents[Math.floor(Math.random() * userAgents.length)];
}
// app.get("/scrape", async (req, res) => {
//   const url = "https://fortnitetracker.com/profile/all/FEMBOYS%20HMU";
//   let valueFetched;
//   let content;
//   try {
//     const browser = await puppeteer.launch({
//       args: [
//         "--disable-setuid-sandbox",
//         "--no-sandbox",
//         "--single-process",
//         "--no-zygote",
//       ],
//       executablePath:
//         process.env.NODE_ENV === "production"
//           ? process.env.PUPPETEER_EXECUTABLE_PATH
//           : puppeteer.executablePath(),
//     });
//     const page = await browser.newPage();
//     const userAgent = getRandomUserAgent();
//     await page.setUserAgent(userAgent);

//     await page.setExtraHTTPHeaders({
//       Accept:
//         "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8",
//       Referer: url,
//     });

//     await page.goto(url, { waitUntil: "domcontentloaded" });

//     // Retrieve the HTML content

//     content = await page.content();
//     // fs.writeFileSync("fortnite-tracker2.html", content);
//     await browser.close();
//     console.log(content);

//     // Load the HTML content into Cheerio
//     const $ = cheerio.load(content);

//     // Select the second last <script> tag and get the content
//     const scriptContent = $("body.trn-site > div.trn-site__container > script")
//       .eq(-2)
//       .html();

//     valueFetched = scriptContent;

//     // res.send(scriptContent);
//     // Parse the JSON data inside the <script> tag if available
//     // fs.writeFileSync("fortnite-tracker2.json", scriptContent);
//     const jsonDataMatch = scriptContent.match(/const profile = (.*);/);
//     if (jsonDataMatch && jsonDataMatch[1]) {
//       const profileData = JSON.parse(jsonDataMatch[1]);
//       // res.json(profileData);
//     } else {
//       res.status(404).send("Profile data not found");
//     }
//   } catch (error) {
//     console.error(
//       "Error scraping Fortnite Tracker due to the cloudfare:",
//       error
//     );
//     res.status(500).send(content);
//   }
// });

app.get("/scrape", (req, res) => {
  scrapeLogic(res);
});

app.get("/test", (req, res) => {
  res.send("Render Puppeteer server is up and running!");
});

app.listen(PORT, () => {
  console.log(`Listening on port ${PORT}`);
});
